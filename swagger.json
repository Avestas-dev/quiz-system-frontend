{
  "swagger": "2.0",
  "info": {
    "title": "Quiz System Api",
    "description": "Project made for Internet Application classes.",
    "version": "1.0.0"
  },
  "host": "quiz-system-backend-h.herokuapp.com",
  "basePath": "/",
  "schemes": "https",
  "securityDefinitions": {
    "apiKeyAuth": {
      "type": "apiKey",
      "in": "header",
      "name": "Authorization",
      "description": "Bearer token verification"
    }
  },
  "paths": {
    "/login": {
      "post": {
        "tags": [
          "Auth"
        ],
        "description": "Endpoint to sign in a specific user",
        "parameters": [
          {
            "name": "obj",
            "in": "body",
            "description": "User login.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/LoginRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User successfully logged in.",
            "schema": {
              "$ref": "#/definitions/LoginResponse"
            }
          }
        }
      }
    },
    "/register": {
      "post": {
        "tags": [
          "Auth"
        ],
        "description": "Endpoint to register user.",
        "parameters": [
          {
            "name": "obj",
            "in": "body",
            "description": "User login.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RegisterRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User successfully signed up.",
            "schema": {
              "$ref": "#/definitions/RegisterResponse"
            }
          }
        }
      }
    },
    "/refresh": {
      "get": {
        "tags": [
          "Auth"
        ],
        "description": "Get new token using refresh token.",
        "parameters": [
          {
            "name": "refresh",
            "in": "header",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "User sucessfully reseted token.",
            "schema": {
              "$ref": "#/definitions/RefreshTokenResponse"
            }
          }
        },
        "security": [
          {
            "apiKeyAuth": []
          }
        ]
      }
    },
    "/reset-start": {
      "post": {
        "tags": [
          "Auth"
        ],
        "description": "Endpoint to start reset password procedure",
        "parameters": [
          {
            "name": "obj",
            "in": "body",
            "description": "User reset.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ResetStartRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/reset": {
      "post": {
        "tags": [
          "Auth"
        ],
        "description": "Endpoint to start reset password procedure.",
        "parameters": [
          {
            "name": "obj",
            "in": "body",
            "description": "User reset.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ResetPasswordRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/login-google": {
      "post": {
        "tags": [
          "Auth"
        ],
        "description": "Endpoint to sign in a specific user using Google",
        "parameters": [
          {
            "name": "obj",
            "in": "body",
            "description": "User google login.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/LoginGoogleRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User successfully logged in.",
            "schema": {
              "$ref": "#/definitions/LoginGoogleResponse"
            }
          }
        }
      }
    },
    "/register-google": {
      "post": {
        "tags": [
          "Auth"
        ],
        "description": "Endpoint to sign up a specific user using Google",
        "parameters": [
          {
            "name": "obj",
            "in": "body",
            "description": "User google register.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RegisterGoogleRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User successfully logged in.",
            "schema": {
              "$ref": "#/definitions/RegisterGoogleResponse"
            }
          }
        }
      }
    },
    "/initdb": {
      "post": {
        "description": "",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/training/all": {
      "get": {
        "tags": [
          "Training"
        ],
        "description": "Gets all trainings of all user that have visiblity set to true, and all trainings of logged in user. Also, retrieve currently active training session.",
        "parameters": [
          {
            "name": "onlyLiked",
            "in": "query",
            "description": "Set to true, if only liked one should be displayed",
            "required": false,
            "type": "string"
          },
          {
            "name": "search",
            "in": "query",
            "description": "Set to search query",
            "required": false,
            "type": "string"
          },
          {
            "name": "tags",
            "in": "query",
            "description": "Set tags",
            "required": false,
            "type": "array"
          }
        ],
        "responses": {
          "200": {
            "description": "All trainings received.",
            "schema": {
              "$ref": "#/definitions/GetAllTrainingsResponse"
            }
          }
        },
        "security": [
          {
            "apiKeyAuth": []
          }
        ]
      }
    },
    "/training/{trainingId}": {
      "get": {
        "tags": [
          "Training"
        ],
        "description": "Gets one training.",
        "parameters": [
          {
            "name": "trainingId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "One training received.",
            "schema": {
              "$ref": "#/definitions/GetOneTrainingResponse"
            }
          }
        },
        "security": [
          {
            "apiKeyAuth": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Training"
        ],
        "description": "Delete training.",
        "parameters": [
          {
            "name": "trainingId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "security": [
          {
            "apiKeyAuth": []
          }
        ]
      }
    },
    "/training": {
      "post": {
        "tags": [
          "Training"
        ],
        "description": "Create training",
        "parameters": [
          {
            "name": "obj",
            "in": "body",
            "description": "Create request.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AddTrainingRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "security": [
          {
            "apiKeyAuth": []
          }
        ]
      },
      "put": {
        "tags": [
          "Training"
        ],
        "description": "Edit training",
        "parameters": [
          {
            "name": "obj",
            "in": "body",
            "description": "Edit request.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/EditTrainingRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "security": [
          {
            "apiKeyAuth": []
          }
        ]
      }
    },
    "/training-session/start": {
      "post": {
        "tags": [
          "Training Session"
        ],
        "description": "Start training session. It makes new training session with finished status set to false. If training session with given id already exists, then response is always success - before creating new training session, it is required to use /training-session/end endpoint.",
        "parameters": [
          {
            "name": "obj",
            "in": "body",
            "description": "Start training session request.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/StartTrainingSessionRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/StartTrainingSessionResponse"
            }
          }
        },
        "security": [
          {
            "apiKeyAuth": []
          }
        ]
      }
    },
    "/training-session/end": {
      "post": {
        "tags": [
          "Training Session"
        ],
        "description": "Ends training session, setting its finished status to true. ",
        "parameters": [
          {
            "name": "obj",
            "in": "body",
            "description": "Ending of training session request.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/EndTrainingSessionRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "security": [
          {
            "apiKeyAuth": []
          }
        ]
      }
    },
    "/training-session/{trainingSessionId}/questions": {
      "get": {
        "tags": [
          "Training Session"
        ],
        "description": "Get all questions for training session that were not answered, and were created after creation of training session. This endpoint should be used to get questions for training session that is started or continued (when previous was not finished) using endpoint /training-session/start",
        "parameters": [
          {
            "name": "trainingSessionId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/GetTrainingSessionQuestionsResponse"
            }
          }
        },
        "security": [
          {
            "apiKeyAuth": []
          }
        ]
      }
    },
    "/training-session/all": {
      "get": {
        "tags": [
          "Training Session"
        ],
        "description": "Get all training sessions done or started by user - it should be used on screen where all training session history is shown - endpoint doesn",
        "parameters": [],
        "responses": {
          "200": {
            "schema": {
              "$ref": "#/definitions/GetUserTrainingSessionsResponse"
            },
            "description": "OK"
          }
        },
        "security": [
          {
            "apiKeyAuth": []
          }
        ]
      }
    },
    "/training-session/{trainingSessionId}": {
      "get": {
        "tags": [
          "Training Session"
        ],
        "description": "Get single training session with all the details for it",
        "parameters": [
          {
            "name": "trainingSessionId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/GetUserTrainingSessionResponse"
            }
          }
        },
        "security": [
          {
            "apiKeyAuth": []
          }
        ]
      }
    },
    "/tag": {
      "get": {
        "tags": [
          "Tags"
        ],
        "description": "Get all available tags for training.",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/TagsResponse"
            }
          }
        },
        "security": [
          {
            "apiKeyAuth": []
          }
        ]
      },
      "post": {
        "tags": [
          "Tags"
        ],
        "description": "Create new tag with status pending, to be accepted by admin.",
        "parameters": [
          {
            "name": "obj",
            "in": "body",
            "description": "Add tag by user.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AddTagRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "security": [
          {
            "apiKeyAuth": []
          }
        ]
      }
    },
    "/tag/{trainingId}": {
      "get": {
        "tags": [
          "Tags"
        ],
        "description": "Get all available tags for training.",
        "parameters": [
          {
            "name": "trainingId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/GetAllTagsForTrainingResponse"
            }
          }
        },
        "security": [
          {
            "apiKeyAuth": []
          }
        ]
      }
    },
    "/question/all/{trainingId}": {
      "get": {
        "tags": [
          "Question"
        ],
        "description": "Get all questions for training, when withAnswers=true then also includes answers. This endpoint should be used when browsing list of all trainings.",
        "parameters": [
          {
            "name": "trainingId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "withAnswers",
            "in": "query",
            "description": "Set to true when questions should include answers.",
            "type": "string"
          },
          {
            "name": "description",
            "in": "query",
            "type": "string"
          },
          {
            "name": "schema",
            "in": "query",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "All questions received.",
            "schema": {
              "$ref": "#/definitions/GetQuestionsResponse"
            }
          }
        },
        "security": [
          {
            "apiKeyAuth": []
          }
        ]
      }
    },
    "/question/{questionId}": {
      "get": {
        "tags": [
          "Question"
        ],
        "description": "Get one question details, with all answers.",
        "parameters": [
          {
            "name": "questionId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "All questions received.",
            "schema": {
              "$ref": "#/definitions/GetQuestionResponse"
            }
          }
        },
        "security": [
          {
            "apiKeyAuth": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Question"
        ],
        "description": "Remove question",
        "parameters": [
          {
            "name": "questionId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "security": [
          {
            "apiKeyAuth": []
          }
        ]
      }
    },
    "/question": {
      "post": {
        "tags": [
          "Question"
        ],
        "description": "Create question, if user owns training, or is admin.",
        "parameters": [
          {
            "name": "obj",
            "in": "body",
            "description": "Create question request.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AddQuestionRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "security": [
          {
            "apiKeyAuth": []
          }
        ]
      },
      "put": {
        "tags": [
          "Question"
        ],
        "description": "Edit question.",
        "parameters": [
          {
            "name": "obj",
            "in": "body",
            "description": "Edit question success.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/EditQuestionRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "security": [
          {
            "apiKeyAuth": []
          }
        ]
      }
    },
    "/question/with-answers": {
      "post": {
        "tags": [
          "Question"
        ],
        "description": "Create question with answers",
        "parameters": [
          {
            "name": "obj",
            "in": "body",
            "description": "Create question with answers request.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AddQuestionWithAnswersRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "security": [
          {
            "apiKeyAuth": []
          }
        ]
      },
      "put": {
        "tags": [
          "Question"
        ],
        "description": "Edit question with all answers.",
        "parameters": [
          {
            "name": "obj",
            "in": "body",
            "description": "Edit question with all answers request.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/EditQuestionWithAnswersRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "security": [
          {
            "apiKeyAuth": []
          }
        ]
      }
    },
    "/user-answer": {
      "post": {
        "tags": [
          "User Answer"
        ],
        "description": "Add answer to question. This endpoint should be used when responding to question, answers should be an array.",
        "parameters": [
          {
            "name": "obj",
            "in": "body",
            "description": "Add answer to given question in given training session.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AddUserAnswerRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "security": [
          {
            "apiKeyAuth": []
          }
        ]
      }
    },
    "/question-answer/{questionAnswerId}": {
      "delete": {
        "tags": [
          "Answer"
        ],
        "description": "Remove question answer",
        "parameters": [
          {
            "name": "questionAnswerId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "questionAnswerId": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "security": [
          {
            "apiKeyAuth": []
          }
        ]
      }
    },
    "/question-answer": {
      "post": {
        "tags": [
          "Answer"
        ],
        "description": "Add answer for question",
        "parameters": [
          {
            "name": "obj",
            "in": "body",
            "description": "Create answer for question request.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AddQuestionAnswerRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "security": [
          {
            "apiKeyAuth": []
          }
        ]
      },
      "put": {
        "tags": [
          "Answer"
        ],
        "description": "Edit question answer.",
        "parameters": [
          {
            "name": "obj",
            "in": "body",
            "description": "Edit question question success.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/EditQuestionAnswerRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "security": [
          {
            "apiKeyAuth": []
          }
        ]
      }
    },
    "/profile": {
      "post": {
        "tags": [
          "Auth"
        ],
        "description": "Get user profile from token",
        "parameters": [],
        "responses": {
          "200": {
            "description": "User profile.",
            "schema": {
              "$ref": "#/definitions/ProfileResponse"
            }
          }
        },
        "security": [
          {
            "apiKeyAuth": []
          }
        ]
      }
    },
    "/admin/tag": {
      "get": {
        "tags": [
          "Admin-Tags"
        ],
        "description": "Get all available tags for training.",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/TagsResponse"
            }
          }
        },
        "security": [
          {
            "apiKeyAuth": []
          }
        ]
      },
      "post": {
        "tags": [
          "Admin-Tags"
        ],
        "description": "Create new tag, that is already accepted.",
        "parameters": [
          {
            "name": "obj",
            "in": "body",
            "description": "Add tag.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AddTagAdminRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "security": [
          {
            "apiKeyAuth": []
          }
        ]
      },
      "put": {
        "tags": [
          "Admin-Tags"
        ],
        "description": "Edit tag.",
        "parameters": [
          {
            "name": "obj",
            "in": "body",
            "description": "Edit tag.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/EditTagRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "security": [
          {
            "apiKeyAuth": []
          }
        ]
      }
    },
    "/admin/tag/accept": {
      "put": {
        "tags": [
          "Admin-Tags"
        ],
        "description": "Accept new tag.",
        "parameters": [
          {
            "name": "obj",
            "in": "body",
            "description": "User login.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AcceptTagRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "security": [
          {
            "apiKeyAuth": []
          }
        ]
      }
    },
    "/admin/tag/reject": {
      "put": {
        "tags": [
          "Admin-Tags"
        ],
        "description": "Reject tag.",
        "parameters": [
          {
            "name": "obj",
            "in": "body",
            "description": "Reject tag.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RejectTagRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "security": [
          {
            "apiKeyAuth": []
          }
        ]
      }
    },
    "/admin/user/all": {
      "get": {
        "tags": [
          "Admin-Users"
        ],
        "description": "Get All Users.",
        "parameters": [],
        "responses": {
          "200": {
            "description": "User successfully logged in.",
            "schema": {
              "$ref": "#/definitions/GetAllUsersResponse"
            }
          }
        },
        "security": [
          {
            "apiKeyAuth": []
          }
        ]
      }
    },
    "/admin/user/block": {
      "post": {
        "tags": [
          "Admin-Users"
        ],
        "description": "Block selected user for given time.",
        "parameters": [
          {
            "name": "obj",
            "in": "body",
            "description": "Block given user to given date.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/BlockUserRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "security": [
          {
            "apiKeyAuth": []
          }
        ]
      }
    },
    "/admin/user/unlock": {
      "post": {
        "tags": [
          "Admin-Users"
        ],
        "description": "Unlock given user.",
        "parameters": [
          {
            "name": "obj",
            "in": "body",
            "description": "Unlock given user.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UnlockUserRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "security": [
          {
            "apiKeyAuth": []
          }
        ]
      }
    }
  },
  "definitions": {
    "LoginRequest": {
      "type": "object",
      "properties": {
        "email": {
          "type": "string",
          "example": "kamilporeba@hotmail.com"
        },
        "password": {
          "type": "string",
          "example": "Kamil123!"
        }
      }
    },
    "LoginResponse": {
      "type": "object",
      "properties": {
        "token": {
          "type": "string",
          "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo0LCJpYXQiOjE2NjYxMDQzMTIsImV4cCI6MTc1MjEwNDMxMn0.H7E3TQPh8Nc0O5JWqPyMfRNHYoTPy57kc8z-2IJd0cc"
        },
        "refreshToken": {
          "type": "string",
          "example": "5f3c44c9-eac1-4ffd-a112-ae5a1fe38fed"
        },
        "email": {
          "type": "string",
          "example": "kamilporeba@hotmail.com"
        },
        "userId": {
          "type": "number",
          "example": 1
        },
        "isAdmin": {
          "type": "boolean",
          "example": false
        }
      }
    },
    "LoginGoogleRequest": {
      "type": "object",
      "properties": {
        "tokenId": {
          "type": "string",
          "example": "token"
        }
      }
    },
    "LoginGoogleResponse": {
      "type": "object",
      "properties": {
        "email": {
          "type": "string",
          "example": "kamilporeba@hotmail.com"
        },
        "token": {
          "type": "string",
          "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo0LCJpYXQiOjE2NjYxMDQzMTIsImV4cCI6MTc1MjEwNDMxMn0.H7E3TQPh8Nc0O5JWqPyMfRNHYoTPy57kc8z-2IJd0cc"
        },
        "refreshToken": {
          "type": "string",
          "example": "5f3c44c9-eac1-4ffd-a112-ae5a1fe38fed"
        },
        "userId": {
          "type": "number",
          "example": 1
        },
        "isAdmin": {
          "type": "boolean",
          "example": true
        }
      }
    },
    "RegisterGoogleResponse": {
      "type": "object",
      "properties": {
        "id": {
          "type": "number",
          "example": 4
        },
        "email": {
          "type": "string",
          "example": "kamilporeba1998@gmail.com"
        },
        "password": {
          "type": "string",
          "example": ""
        },
        "refreshToken": {
          "type": "string",
          "example": "refreshToken"
        },
        "passwordResetToken": {
          "type": "string",
          "example": "resetToken"
        },
        "passwordResetDate": {
          "type": "string",
          "example": "2022-12-18T20:26:53.025Z"
        },
        "googleSub": {
          "type": "string",
          "example": "105081556580525628106"
        },
        "isAdmin": {
          "type": "boolean",
          "example": false
        },
        "createdAt": {
          "type": "string",
          "example": "2022-12-18T20:26:53.025Z"
        },
        "updatedAt": {
          "type": "string",
          "example": "2022-12-18T20:26:53.025Z"
        }
      }
    },
    "RegisterGoogleRequest": {
      "type": "object",
      "properties": {
        "tokenId": {
          "type": "string",
          "example": "tokenId"
        }
      }
    },
    "RegisterRequest": {
      "type": "object",
      "properties": {
        "email": {
          "type": "string",
          "example": "kamilporeba@hotmail.com"
        },
        "password": {
          "type": "string",
          "example": "Kamil123!"
        },
        "passwordRepeated": {
          "type": "string",
          "example": "Kamil123!"
        }
      }
    },
    "RegisterResponse": {
      "type": "object",
      "properties": {
        "id": {
          "type": "number",
          "example": 4
        },
        "email": {
          "type": "string",
          "example": "kamilporeba1998@gmail.com"
        },
        "password": {
          "type": "string",
          "example": "password"
        },
        "refreshToken": {
          "type": "string",
          "example": "refreshToken"
        },
        "passwordResetToken": {
          "type": "string",
          "example": "resetToken"
        },
        "passwordResetDate": {
          "type": "string",
          "example": "2022-12-18T20:26:53.026Z"
        },
        "googleSub": {
          "type": "string",
          "example": "105081556580525628106"
        },
        "isAdmin": {
          "type": "boolean",
          "example": false
        },
        "createdAt": {
          "type": "string",
          "example": "2022-12-18T20:26:53.026Z"
        },
        "updatedAt": {
          "type": "string",
          "example": "2022-12-18T20:26:53.026Z"
        }
      }
    },
    "ProfileResponse": {
      "type": "object",
      "properties": {
        "email": {
          "type": "string",
          "example": "kamilporeba@hotmail.com"
        },
        "id": {
          "type": "number",
          "example": 1
        }
      }
    },
    "RefreshTokenResponse": {
      "type": "object",
      "properties": {
        "token": {
          "type": "string",
          "example": "token"
        }
      }
    },
    "ResetStartRequest": {
      "type": "object",
      "properties": {
        "email": {
          "type": "string",
          "example": "kamilporeba@hotmail.com"
        }
      }
    },
    "ResetPasswordRequest": {
      "type": "object",
      "properties": {
        "email": {
          "type": "string",
          "example": "kamilporeba@hotmail.com"
        },
        "resetGUID": {
          "type": "string",
          "example": "e31ace7a-99fd-45e1-91c7-855e02d54983"
        },
        "password": {
          "type": "string",
          "example": "Kamil123!"
        },
        "passwordRepeated": {
          "type": "string",
          "example": "Kamil123!"
        }
      }
    },
    "AddTrainingRequest": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "example": "Training name"
        },
        "visibility": {
          "type": "boolean",
          "example": true
        },
        "tagIds": {
          "type": "array",
          "example": [
            1
          ],
          "items": {
            "type": "number"
          }
        }
      }
    },
    "EditTrainingRequest": {
      "type": "object",
      "properties": {
        "trainingId": {
          "type": "number",
          "example": 1
        },
        "name": {
          "type": "string",
          "example": "Training name"
        },
        "visibility": {
          "type": "boolean",
          "example": true
        },
        "tagIds": {
          "type": "array",
          "example": [
            1
          ],
          "items": {
            "type": "number"
          }
        }
      }
    },
    "GetAllTrainingsResponse": {
      "type": "array",
      "items": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number",
            "example": 1
          },
          "createdAt": {
            "type": "string",
            "example": "2022-12-18T20:26:53.034Z"
          },
          "name": {
            "type": "string",
            "example": "test"
          },
          "updatedAt": {
            "type": "string",
            "example": "2022-12-18T20:26:53.034Z"
          },
          "userId": {
            "type": "number",
            "example": 1
          },
          "visibility": {
            "type": "boolean",
            "example": true
          },
          "likedTraining": {
            "type": "boolean",
            "example": true
          },
          "user": {
            "type": "object",
            "properties": {
              "email": {
                "type": "string",
                "example": "kamilporeba@hotmail.com"
              },
              "id": {
                "type": "number",
                "example": 1
              }
            }
          },
          "tagTraining": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "tagId": {
                  "type": "number",
                  "example": 1
                },
                "tagName": {
                  "type": "string",
                  "example": "tagName"
                }
              }
            }
          },
          "trainingSession": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "number",
                  "example": 1
                },
                "createdAt": {
                  "type": "string",
                  "example": "2022-12-18T20:26:53.034Z"
                },
                "finished": {
                  "type": "boolean",
                  "example": false
                },
                "updatedAt": {
                  "type": "string",
                  "example": "2022-12-18T20:26:53.034Z"
                }
              }
            }
          }
        }
      }
    },
    "GetOneTrainingResponse": {
      "type": "object",
      "properties": {
        "id": {
          "type": "number",
          "example": 1
        },
        "createdAt": {
          "type": "string",
          "example": "2022-12-18T20:26:53.035Z"
        },
        "name": {
          "type": "string",
          "example": "test"
        },
        "updatedAt": {
          "type": "string",
          "example": "2022-12-18T20:26:53.035Z"
        },
        "userId": {
          "type": "number",
          "example": 1
        },
        "visibility": {
          "type": "boolean",
          "example": true
        },
        "likedTraining": {
          "type": "boolean",
          "example": true
        },
        "user": {
          "type": "object",
          "properties": {
            "email": {
              "type": "string",
              "example": "kamilporeba@hotmail.com"
            },
            "id": {
              "type": "number",
              "example": 1
            }
          }
        },
        "tagTraining": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "tagId": {
                "type": "number",
                "example": 1
              },
              "tagName": {
                "type": "string",
                "example": "tagName"
              }
            }
          }
        },
        "trainingSession": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "id": {
                "type": "number",
                "example": 1
              },
              "createdAt": {
                "type": "string",
                "example": "2022-12-18T20:26:53.035Z"
              },
              "finished": {
                "type": "boolean",
                "example": false
              },
              "updatedAt": {
                "type": "string",
                "example": "2022-12-18T20:26:53.035Z"
              }
            }
          }
        }
      }
    },
    "AddQuestionRequest": {
      "type": "object",
      "properties": {
        "question": {
          "type": "string",
          "example": "Sample question"
        },
        "trainingId": {
          "type": "number",
          "example": 1
        }
      }
    },
    "AddQuestionAnswerRequest": {
      "type": "object",
      "properties": {
        "questionId": {
          "type": "number",
          "example": 1
        },
        "answer": {
          "type": "string",
          "example": "Sample answer"
        },
        "isCorrect": {
          "type": "boolean",
          "example": true
        }
      }
    },
    "AddQuestionAnswerResponse": {
      "type": "object",
      "properties": {
        "answer": {
          "type": "string",
          "example": "answer"
        },
        "createdAt": {
          "type": "string",
          "example": "2022-12-18T20:26:53.021Z"
        },
        "id": {
          "type": "number",
          "example": 1
        },
        "isCorrect": {
          "type": "boolean",
          "example": true
        },
        "questionId": {
          "type": "number",
          "example": 1
        },
        "updatedAt": {
          "type": "string",
          "example": "2022-12-18T20:26:53.021Z"
        }
      }
    },
    "GetQuestionsResponse": {
      "type": "array",
      "items": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number",
            "example": 1
          },
          "question": {
            "type": "string",
            "example": "Test question"
          },
          "trainingId": {
            "type": "number",
            "example": 1
          },
          "createdAt": {
            "type": "string",
            "example": "2022-12-18T20:26:53.030Z"
          },
          "updatedAt": {
            "type": "string",
            "example": "2022-12-18T20:26:53.030Z"
          },
          "QuestionAnswer": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "number",
                  "example": 1
                },
                "questionId": {
                  "type": "number",
                  "example": 1
                },
                "answer": {
                  "type": "string",
                  "example": "sample answer"
                },
                "isCorrect": {
                  "type": "boolean",
                  "example": true
                },
                "createdAt": {
                  "type": "string",
                  "example": "2022-12-18T20:26:53.030Z"
                },
                "updatedAt": {
                  "type": "string",
                  "example": "2022-12-18T20:26:53.030Z"
                }
              }
            }
          }
        }
      }
    },
    "GetQuestionResponse": {
      "type": "object",
      "properties": {
        "id": {
          "type": "number",
          "example": 1
        },
        "question": {
          "type": "string",
          "example": "Test question"
        },
        "trainingId": {
          "type": "number",
          "example": 1
        },
        "createdAt": {
          "type": "string",
          "example": "2022-12-18T20:26:53.030Z"
        },
        "updatedAt": {
          "type": "string",
          "example": "2022-12-18T20:26:53.030Z"
        },
        "QuestionAnswer": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "id": {
                "type": "number",
                "example": 1
              },
              "questionId": {
                "type": "number",
                "example": 1
              },
              "answer": {
                "type": "string",
                "example": "sample answer"
              },
              "isCorrect": {
                "type": "boolean",
                "example": true
              },
              "createdAt": {
                "type": "string",
                "example": "2022-12-18T20:26:53.030Z"
              },
              "updatedAt": {
                "type": "string",
                "example": "2022-12-18T20:26:53.030Z"
              }
            }
          }
        }
      }
    },
    "EditQuestionRequest": {
      "type": "object",
      "properties": {
        "questionId": {
          "type": "number",
          "example": 1
        },
        "question": {
          "type": "string",
          "example": "Sample question"
        }
      }
    },
    "EditQuestionAnswerRequest": {
      "type": "object",
      "properties": {
        "answer": {
          "type": "string",
          "example": "Sample answer"
        },
        "isCorrect": {
          "type": "boolean",
          "example": true
        },
        "questionAnswerId": {
          "type": "number",
          "example": 1
        }
      }
    },
    "AddQuestionWithAnswersRequest": {
      "type": "object",
      "properties": {
        "question": {
          "type": "string",
          "example": "Sample question"
        },
        "trainingId": {
          "type": "number",
          "example": 1
        },
        "answers": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "answer": {
                "type": "string",
                "example": "Sample answer 2"
              },
              "isCorrect": {
                "type": "boolean",
                "example": false
              }
            }
          }
        }
      }
    },
    "StartTrainingSessionRequest": {
      "type": "object",
      "properties": {
        "trainingId": {
          "type": "number",
          "example": 1
        }
      }
    },
    "StartTrainingSessionResponse": {
      "type": "object",
      "properties": {
        "trainingSessionId": {
          "type": "number",
          "example": 1
        }
      }
    },
    "EndTrainingSessionRequest": {
      "type": "object",
      "properties": {
        "trainingId": {
          "type": "number",
          "example": 1
        }
      }
    },
    "AddUserAnswerRequest": {
      "type": "object",
      "properties": {
        "trainingSessionId": {
          "type": "number",
          "example": 1
        },
        "questionId": {
          "type": "number",
          "example": 1
        },
        "questionAnswerIds": {
          "type": "array",
          "example": [
            1,
            2,
            3
          ],
          "items": {
            "type": "number"
          }
        }
      }
    },
    "TagsResponse": {
      "type": "array",
      "items": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number",
            "example": 3
          },
          "name": {
            "type": "string",
            "example": "testTag3"
          },
          "tagStatus": {
            "type": "string",
            "example": "pending"
          }
        }
      }
    },
    "BlockUserRequest": {
      "type": "object",
      "properties": {
        "userId": {
          "type": "number",
          "example": 1
        },
        "blockedTo": {
          "type": "string",
          "example": "2022-12-18T20:26:53.037Z"
        }
      }
    },
    "UnlockUserRequest": {
      "type": "object",
      "properties": {
        "userId": {
          "type": "number",
          "example": 1
        }
      }
    },
    "GetTrainingSessionQuestionsResponse": {
      "type": "object",
      "properties": {
        "questions": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "questionAnswer": {
                "type": "array",
                "example": [],
                "items": {}
              },
              "id": {
                "type": "number",
                "example": 34
              },
              "question": {
                "type": "string",
                "example": "Sample question"
              },
              "trainingId": {
                "type": "number",
                "example": 1000000
              },
              "createdAt": {
                "type": "string",
                "example": "2022-12-18T20:26:53.035Z"
              },
              "updatedAt": {
                "type": "string",
                "example": "2022-12-18T20:26:53.035Z"
              }
            }
          }
        },
        "answeredQuestionCount": {
          "type": "number",
          "example": 0
        },
        "totalQuestionCount": {
          "type": "number",
          "example": 5
        }
      }
    },
    "GetUserTrainingSessionsResponse": {
      "type": "array",
      "items": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number",
            "example": 5
          },
          "finished": {
            "type": "boolean",
            "example": true
          },
          "trainingId": {
            "type": "number",
            "example": 1000000
          },
          "trainingName": {
            "type": "string",
            "example": "Init training 1"
          },
          "trainingQuestions": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "trainingQuestionId": {
                  "type": "number",
                  "example": 1000000
                },
                "question": {
                  "type": "string",
                  "example": "Init question 1"
                },
                "answerStatus": {
                  "type": "string",
                  "example": "incorrect"
                }
              }
            }
          },
          "correctQuestionCount": {
            "type": "number",
            "example": 1
          },
          "totalQuestionCount": {
            "type": "number",
            "example": 3
          }
        }
      }
    },
    "GetUserTrainingSessionResponse": {
      "type": "object",
      "properties": {
        "id": {
          "type": "number",
          "example": 5
        },
        "finished": {
          "type": "boolean",
          "example": true
        },
        "trainingId": {
          "type": "number",
          "example": 1000000
        },
        "trainingName": {
          "type": "string",
          "example": "Init training 1"
        },
        "trainingQuestions": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "trainingQuestionId": {
                "type": "number",
                "example": 1000000
              },
              "question": {
                "type": "string",
                "example": "Init question 1"
              },
              "answerStatus": {
                "type": "string",
                "example": "incorrect"
              }
            }
          }
        },
        "correctQuestionCount": {
          "type": "number",
          "example": 1
        },
        "totalQuestionCount": {
          "type": "number",
          "example": 3
        }
      }
    },
    "AddTagRequest": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "example": "tagName"
        }
      }
    },
    "AddTagAdminRequest": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "example": "tagName"
        }
      }
    },
    "RejectTagRequest": {
      "type": "object",
      "properties": {
        "tagId": {
          "type": "number",
          "example": 1
        }
      }
    },
    "GetAllTagsForTrainingResponse": {
      "type": "array",
      "items": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number",
            "example": 3
          },
          "name": {
            "type": "string",
            "example": "testTag3"
          },
          "tagStatus": {
            "type": "string",
            "example": "pending"
          }
        }
      }
    },
    "AcceptTagRequest": {
      "type": "object",
      "properties": {
        "tagId": {
          "type": "number",
          "example": 1
        }
      }
    },
    "EditTagRequest": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "example": "newTagName"
        },
        "tagId": {
          "type": "number",
          "example": 1
        }
      }
    },
    "GetAllUsersResponse": {
      "type": "array",
      "items": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number",
            "example": 7
          },
          "createdAt": {
            "type": "string",
            "example": "2022-12-18T20:26:53.038Z"
          },
          "updatedAt": {
            "type": "string",
            "example": "2022-12-18T20:26:53.038Z"
          },
          "email": {
            "type": "string",
            "example": "kamilporeba5@hotmail.com"
          },
          "passwordResetDate": {
            "type": "string",
            "example": "2022-12-18T20:26:53.038Z"
          },
          "isAdmin": {
            "type": "boolean",
            "example": true
          },
          "googleSub": {},
          "blockedDate": {
            "type": "string",
            "example": "2022-12-18T20:26:53.038Z"
          }
        }
      }
    },
    "EditQuestionWithAnswersRequest": {
      "type": "object",
      "properties": {
        "question": {
          "type": "string",
          "example": "Sample question"
        },
        "questionId": {
          "type": "number",
          "example": 1
        },
        "answers": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "answer": {
                "type": "string",
                "example": "Sample answer 2"
              },
              "isCorrect": {
                "type": "boolean",
                "example": false
              },
              "answerId": {
                "type": "number",
                "example": 1
              }
            }
          }
        }
      }
    }
  }
}